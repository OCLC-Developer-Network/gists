const user = btoa(pm.environment.get('key') + ':' + pm.environment.get('secret'));
const tokenUrl = pm.environment.get('oauth-endpoint') + "/token"
const postRequest = {
  url: tokenUrl,
  method: 'POST',
  timeout: 0,
  header: {
    "Accept": "application/json",
    "Authorization": "Basic " + user
  },
  body: {
    mode: 'urlencoded',
    urlencoded: [
        {key: "grant_type", value: "client_credentials"},
        {key:"scope", value: "WorldCatMetadataAPI"}
    ]}
};

var getToken = true;
if (!pm.environment.get('tokenExpires') || 
    !pm.environment.get('accessToken')) {
    console.log('Token or expiry date are missing')
} else if (pm.environment.get('tokenExpires') <= (new Date()).getTime()) {
    console.log('Token is expired')
} else {
    getToken = false;
    console.log('Token and expiry date are all good');
}

if (getToken === true) {
    pm.sendRequest(postRequest, function (err, res) {
        var responseJson = res.json();
        console.log(responseJson);
        pm.environment.set('accessToken', responseJson.access_token);
        var expiryDate = new Date();
        expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);
        pm.environment.set('tokenExpires', expiryDate.getTime());
    });
}
